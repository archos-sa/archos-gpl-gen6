<!-- ##### SECTION Title ##### -->
TnyGtkFolderStoreTreeModel

<!-- ##### SECTION Short_Description ##### -->
A tree model for folder store instances that lets a tree view show folders recursively

<!-- ##### SECTION Long_Description ##### -->
<para>
A #GtkTreeModel implementation for storing #TnyFolderStore instances.
</para>
<para>
The implementation inherits the #GtkTreeStore, implements #GtkTreeModel and #TnyList.
It recursively walks the folders of folder store instances that get added. Using it as
a model for a #GtkTreeView it will display both the account name as parent row, in case
the folder store being added is of type #TnyAccount, with the account's folders as the 
child rows and the folder's child folders as sub-child rows.
</para>
<para>
It's very important to unreference the instance you will get when doing something like this:
<programlisting>
TnyFolder *folder;
gtk_tree_model_get (model, &amp;iter,
  TNY_FOLDER_STORE_TREE_MODEL_INSTANCE_COLUMN,
  &amp;folder, -1);
/* use folder */
g_object_unref (G_OBJECT(folder));
</programlisting>
The column is indeed a G_TYPE_OBJECT column and getting it from the #GtkTreeModel will 
indeed add a reference.
</para>
<para>
Using the TNY_GTK_FOLDER_STORE_TREE_MODEL_TYPE_COLUMN you can know what type of instance you will 
get when using the TNY_FOLDER_STORE_TREE_MODEL_INSTANCE_COLUMN. If its value isn't 
TNY_FOLDER_TYPE_ROOT, the instance type will be a #TnyFolder , if it is the instance type 
will be a #TnyAccount. Read more about the available columns and folders-types at the 
#TnyGtkFolderStoreTreeModelColumn, the #TnyFolderType and the #TnyFolder types.
</para>
<para>
Example:
<programlisting>
TnyFolderType type;
gtk_tree_model_get (model, &amp;iter,
  TNY_GTK_FOLDER_STORE_TREE_MODEL_TYPE_COLUMN,
  &amp;type, -1);
if (type != TNY_FOLDER_TYPE_ROOT)
{
    TnyFolder *folder;
    gtk_tree_model_get (model, &amp;iter,
      TNY_FOLDER_STORE_TREE_MODEL_INSTANCE_COLUMN,
      &amp;folder, -1);
    /* use folder */
    g_object_unref (G_OBJECT(folder));
} else {
    TnyAccount *account;
    gtk_tree_model_get (model, &amp;iter,
      TNY_FOLDER_STORE_TREE_MODEL_INSTANCE_COLUMN,
      &amp;account, -1);
    /* use account */
    g_object_unref (G_OBJECT(account));
}
</programlisting>
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#TnyList, #TnyStoreAccount, #TnyFolderStore, #GtkTreeView, #GtkTreeStore, #GtkTreeModel, #TnyGtkAccountTreeModelColumn
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### MACRO TNY_TYPE_GTK_FOLDER_STORE_TREE_MODEL_COLUMN ##### -->
<para>

</para>



<!-- ##### STRUCT TnyGtkFolderStoreTreeModel ##### -->
<para>

</para>


<!-- ##### FUNCTION tny_gtk_folder_store_tree_model_column_get_type ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION tny_gtk_folder_store_tree_model_new ##### -->
<para>

</para>

@query: 
@Returns: 


<!-- ##### FUNCTION tny_gtk_folder_store_tree_model_prepend ##### -->
<para>

</para>

@self: 
@item: 
@root_name: 


<!-- ##### FUNCTION tny_gtk_folder_store_tree_model_append ##### -->
<para>

</para>

@self: 
@item: 
@root_name: 


